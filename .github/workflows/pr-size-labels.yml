---
name: PR Size Labels
on:
  pull_request_target:
    types: [opened, synchronize, reopened]
permissions:
  contents: read
  pull-requests: write
jobs:
  size:
    runs-on: ubuntu-22.04
    steps:
      - name: Label PR by size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return core.setFailed('No PR context available');
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            // Fetch changed files and sum changes (additions + deletions)
            let page = 1;
            let total = 0;
            for (;;) {
              const { data: files } = await github.rest.pulls.listFiles({ owner, repo, pull_number: pr.number, per_page: 100, page });
              for (const f of files) {
                if (['pnpm-lock.yaml', 'Cargo.lock'].includes(f.filename)) continue;
                total += (f.changes || 0);
              }
              if (files.length < 100) break;
              page += 1;
            }
            // Determine size label
            const thresholds = [10, 50, 200, 500];
            const labels = ['size/XS', 'size/S', 'size/M', 'size/L', 'size/XL'];
            let idx = thresholds.findIndex((t) => total <= t);
            if (idx === -1) idx = labels.length - 1;
            const labelToAdd = labels[idx];
            // Remove existing size/* labels
            const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({ owner, repo, issue_number: pr.number });
            const sizeLabels = currentLabels.filter(l => l.name.startsWith('size/')).map(l => l.name);
            for (const l of sizeLabels) {
              if (l !== labelToAdd) {
                try { await github.rest.issues.removeLabel({ owner, repo, issue_number: pr.number, name: l }); } catch {}
              }
            }
            // Add new size label if missing
            if (!sizeLabels.includes(labelToAdd)) {
              try { await github.rest.issues.addLabels({ owner, repo, issue_number: pr.number, labels: [labelToAdd] }); } catch (e) {
                core.info(`Could not add label ${labelToAdd}: ${e.message}`);
              }
            }
